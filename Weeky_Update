Weekly Update
Amaan and Aaron

---------Week 1----------
  Aaron created a working model of a 3D pose estimator
using two USB cameras, OpenCV and OpenPose over the summer.
Amaan created this GitHub and worked on creating an implementation of
multithreading using OpenPose.
---------Week 2----------
  Aaron presented his work to NIST on 9/8, and Amaan finished his 
multithreading implementation. Aaron also created a task list
to assign and track upcoming tasks.
---------Week 3----------
  Aaron revised his pose estimation program to include hand support,
allow for easy switching between keypoints and created more well-defined
user options. Amaan fully implemented his multithreading into Aaron's
code, so that a single unified program was created.
---------Week 4----------
  Aaron researched GUI work environments to use with the program, and
Amaan worked on Blender support to visualize the 3D keypoint output.
The GUI was narrowed down to two choices: electronJS and Qt.
---------Week 5----------
  Aaron created test environments in electronJS and Qt, and decided to
continue working with electronJS because of its lightweight nature. He
also started to learn Unity, and is working on creating a 3D worldspace
to represent a point cloud. Amaan also worked with electronJS and has
created a skeleton rig to be synced using the blender API.
  Amaan parsed triangulated 3D coordinates of each keypoint into a JSON 
file. He then, created a python script to parse through the JSON outfile 
in Blender and generate an Armature object with bone objects that contain 
a head-tail pair of coordinates that correspond to their approprioate keypoint
3D coordinates from the JSON outfile.
---------Week 6----------
  Aaron created a mock GUI on paper for a launcher for the program. 
The program was split into three modular components: the source, which
is the cameras that frames are collected from; the model, which refers to
the specific ML program that analyzes the frames and collects 3D keypoint
data; and the output, which is the display for which the information is
shown to the user. A modular design was prioritized so that user options
could be added without redesigning the UI framework.
  One frame of the 3D coordinates of the head keypoints were used for testing. 
The results were not clean, and inconsistent. In order to produce clean visual
and consistent results, the joint-angle has to be computed so a preset skeletal 
structure can have its pose apporpriately updated. The joint-angle has to be
represented as quaternions to avoid Gimbal Lock. The armature's 3D location is
to be calculated by either finding the average of all Z coordinates of all keypoints
or select the main body's Z coordinate. This is to be done at the moment.
---------Week 7----------
  Aaron worked on implementing the GUI with electronJS. He started with a boilerplate
called electron-forge and worked on familiarizing himself with javascript and html.
He implemented the framework for the mock GUI, but more work is necessary to complete it.
  Amaan successfully synced Blender frames with Openpose frames. He has been implenting various
interpolation functions in Blender for smooth rotational animations. 
---------Week 8----------
  Aaron created a 2D annotator using OpenCV for the evaluation team to use. It runs through a directory, 
checks for image files, and allows the user to annotate a variable number of keypoints. It then outputs a
csv file for each image.
  Amaan is currently working on getting rid of rotational extremeties that are high in frequency. 
---------Week 9----------
  Aaron visited his sister.
  Amaan fixed a lot of issues with the rotational smoothness and syncing of the Blender rig. Real-time
rotational updates has also been added to the program through Modal Timer Operator. The results are not perfect, but have improved drastically
compared to the last rig test. This was done through altering local coordinate axis and linear interpolation. 
---------Week 10----------
  Aaron worked on implementing the GUI using electronJS, javascript and HTML
  Amaan read papers on global-local coordinate axis transformations and various pose angle calc implementations
such as atan2 and dot product. 
---------Week 11----------
  Aaron completed the framework for the GUI. 
Amaan attempted to replace current rotation configuration for current Blender rig with the local->global rotational matrix transformations.
---------Week 12----------
Amaan has finished pose-Blender rigging. All issues have been fixed all with a hidden function in Blender Python API. I cry. 
Amaan also proceeded with trial test on imported character rig. Pose syncing wasn't the best due to the model having
a skeleton setup of its own causing setup issues. 
